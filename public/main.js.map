{"version":3,"sources":["./src/app/guard/user.guard.ts","./src/app/module/alert/providers/alert.service.ts","./src/environments/environment.ts","./src/app/components/greeting/greeting.component.ts","./src/app/components/greeting/greeting.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/module/alert/alert.module.ts","./src/app/database.service.ts","./src/app/module/alert/model/alert.ts","./src/app/guard/admin.guard.ts","./src/app/module/alert/components/alert-container/alert-container.component.ts","./src/app/module/alert/components/alert-container/alert-container.component.html","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/model/score.ts","./src/app/shared.service.ts","./src/app/app-routing.module.ts","./src/app/module/alert/components/alert/alert.component.ts","./src/app/module/alert/components/alert/alert.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Alert, AlertType } from '../module/alert/model/alert';\nimport { AlertService } from '../module/alert/providers/alert.service';\nimport { SharedService } from '../shared.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n\n  constructor(\n    private sharedService: SharedService,\n    private alertService: AlertService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let user = this.sharedService.getCurrentUser();\n    if (user && user.role == \"user\") {\n      return true;\n    }\n    this.alertService.show(new Alert(AlertType.Warning, \"You need to login first\", true, 2));\n    this.router.navigate(['login']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Alert, AlertType } from '../model/alert';\n\n@Injectable()\nexport class AlertService {\n\n  private _alerts: BehaviorSubject<Array<Alert>> = new BehaviorSubject<Array<Alert>>([]);\n\n  public get alerts(): Observable<Array<Alert>> { return this._alerts.asObservable(); }\n\n  constructor() {\n  }\n\n  public show(alert: Alert): void {\n    const updatedArray = this._alerts.value;\n    updatedArray.push(alert);\n    this._alerts.next(updatedArray);\n  }\n\n  public remove(alert: Alert): void {\n    const updatedArray = this._alerts.value;\n    updatedArray.splice(updatedArray.findIndex((f) => f == alert), 1);\n    this._alerts.next(updatedArray);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-greeting',\n  templateUrl: './greeting.component.html',\n  styleUrls: ['./greeting.component.scss']\n})\nexport class GreetingComponent implements OnInit {\n\n  public score: number = 0;\n\n  constructor(\n    private sharedService: SharedService,\n    private router: Router\n  ) {\n    this.score = this.router.getCurrentNavigation()?.extras?.state?.score.score;\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sharedService.signOut();\n    }, 5000);\n  }\n\n}\n","<div class=\"container py-5\">\n\n    <div class=\"row\">\n        <div class=\"col-lg-8 mx-auto text-center vertical-center\">\n            <h1 class=\"display-4\">Thank you</h1>\n            <p class=\"lead mb-0\">Your total score is {{ score }} </p>\n        </div>\n    </div>\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Score } from 'src/app/model/score';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  public scores: Array<Score> = [];\n\n  constructor(\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit(): void {\n    this.scores = this.sharedService.getAllScore();\n  }\n\n  exportToCSV(): void {\n    this.sharedService.downloadCSVFile(this.scores);\n  }\n\n}\n","<div class=\"container py-5\">\n\n    <div class=\"row\">\n        <div class=\"col-lg-8 mx-auto text-center mb-4\">\n            <h1 class=\"display-4\">Welcome</h1>\n        </div>\n    </div>\n\n    <div class=\"table-scrollable\">\n        <table class=\"table table-hover table-sortable\">\n            <thead>\n                <tr>\n                    <th data-sort-type=\"numeric\">#</th>\n                    <th data-sort-type=\"text\">Nick Name</th>\n                    <th data-sort-type=\"numeric\">Score</th>\n                    <th data-sort-type=\"text\">Time Taken</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let data of scores; index as index;\">\n                    <td>{{ index + 1 }}</td>\n                    <td>{{ data.nickname }}</td>\n                    <td>{{ data.score }}</td>\n                    <td>{{ data.time | date :'ss:SS' }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <button type=\"button\" class=\"subscribe btn btn-primary btn-block rounded-pill shadow-sm\" (click)=\"exportToCSV()\">\n        Export </button>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from './shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  public userLoggedIn: boolean = false;\n\n  constructor(\n    public sharedService: SharedService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  signout() {\n    console.log(\"called\");\n    this.sharedService.signOut();\n  }\n}\n","<nav class=\"navbar navbar-inverse\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <span class=\"navbar-brand\">Dice Game</span>\n        </div>\n        <ul class=\"nav navbar-nav navbar-right\" [ngClass]=\"{ 'd-none': !sharedService.getCurrentUser() }\">\n            <li><a (click)=\"signout()\">Sign Out</a></li>\n        </ul>\n    </div>\n</nav>\n<router-outlet></router-outlet>\n<alert-container></alert-container>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Alert, AlertType } from 'src/app/module/alert/model/alert';\nimport { AlertService } from 'src/app/module/alert/providers/alert.service';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public autoValidate: boolean = false;\n\n  public loginForm: FormGroup = new FormGroup({\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    nickname: new FormControl('', Validators.required)\n  });\n\n  constructor(\n    private router: Router,\n    private sharedService: SharedService,\n    private alertService: AlertService,\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  public login(): void {\n    if (this.loginForm.valid) {\n\n      let user = this.loginForm.value;\n\n      const response = this.sharedService.authenticateUser(user);\n\n      if (response.user.role == \"admin\") {\n        this.autoValidate = false;\n\n        this.alertService.show(new Alert(AlertType.Success, \"Logged in as admin\", true));\n        this.router.navigateByUrl(\"dashboard\");\n        return;\n      }\n\n      if (response.status == 201) {\n        this.alertService.show(new Alert(AlertType.Success, \"User created and logged in successfully\", true));\n        this.router.navigateByUrl(\"game\");\n      } else {\n        this.alertService.show(new Alert(AlertType.Success, \"Logged in successfully\", true));\n        this.router.navigateByUrl(\"game\");\n      }\n\n      this.autoValidate = false;\n\n    } else {\n      this.autoValidate = true;\n\n      this.alertService.show(new Alert(AlertType.Danger, \"Please provide an valid input\", true));\n    }\n  }\n\n}\n","<div class=\"container py-5\">\n\n    <div class=\"row\">\n        <div class=\"col-lg-8 mx-auto text-center\">\n            <h1 class=\"display-4\">Authentication</h1>\n            <p class=\"lead mb-0\">Please login to access the system</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-lg-6 mx-auto\">\n            <div class=\"bg-white rounded-lg shadow-sm p-5\">\n\n                <div id=\"nav-tab-card\" class=\"tab-pane fade show active\">\n\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                        <div class=\"form-group\"\n                            [ngClass]=\"{'has-error': (autoValidate || loginForm.controls['username'].touched) && loginForm.controls['username'].errors && loginForm.controls['username'].errors.required, 'has-success': loginForm.controls['username'].valid}\">\n                            <label for=\"username\" class=\"control-label\">Username</label>\n                            <input type=\"text\" name=\"username\" placeholder=\"David Smith\" required class=\"form-control\"\n                                formControlName=\"username\">\n                            <span class=\"help-block\"\n                                *ngIf=\"(autoValidate || loginForm.controls['username'].touched) && loginForm.controls['username'].errors && loginForm.controls['username'].errors.required\">Please\n                                enter Username.</span>\n                        </div>\n\n                        <div class=\"form-group\"\n                            [ngClass]=\"{'has-error': (autoValidate || loginForm.controls['password'].touched) && loginForm.controls['password'].errors && loginForm.controls['password'].errors.required, 'has-success': loginForm.controls['password'].valid}\">\n                            <label for=\"password\" class=\"control-label\">Password</label>\n                            <input type=\"password\" name=\"password\" placeholder=\"*******\" required class=\"form-control\"\n                                formControlName=\"password\">\n                            <span class=\"help-block\"\n                                *ngIf=\"(autoValidate || loginForm.controls['password'].touched) && loginForm.controls['password'].errors && loginForm.controls['password'].errors.required\">Please\n                                enter password.</span>\n                        </div>\n\n                        <div class=\"form-group\"\n                            [ngClass]=\"{'has-error': (autoValidate || loginForm.controls['nickname'].touched) && loginForm.controls['nickname'].errors && loginForm.controls['nickname'].errors.required, 'has-success': loginForm.controls['nickname'].valid}\">\n                            <label for=\"nickname\" class=\"control-label\">Nickname</label>\n                            <input type=\"text\" name=\"nickname\" placeholder=\"David\" required class=\"form-control\"\n                                formControlName=\"nickname\">\n                            <span class=\"help-block\"\n                                *ngIf=\"(autoValidate || loginForm.controls['nickname'].touched) && loginForm.controls['nickname'].errors && loginForm.controls['nickname'].errors.required\">Please\n                                enter nickname.</span>\n                        </div>\n\n                        <button type=\"submit\" class=\"subscribe btn btn-primary btn-block rounded-pill shadow-sm\">\n                            Login </button>\n                    </form>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { GameComponent } from './components/game/game.component';\nimport { GreetingComponent } from './components/greeting/greeting.component';\nimport { AlertModule } from './module/alert/alert.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    GameComponent,\n    GreetingComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    AlertModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertContainerComponent } from './components/alert-container/alert-container.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { AlertService } from './providers/alert.service';\n\n@NgModule({\n  declarations: [\n    AlertContainerComponent,\n    AlertComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AlertService\n  ],\n  exports: [\n    AlertContainerComponent,\n    // AlertService\n  ]\n})\nexport class AlertModule { }\n","import { Injectable } from '@angular/core';\nimport { Score } from './model/score';\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\n  private users: Array<User> = [];\n  private scores: Array<Score> = [];\n\n  constructor() {\n    let users = localStorage.getItem('users');\n    let scores = localStorage.getItem('scores');\n\n    if (users) {\n      this.users = JSON.parse(users);\n    } else {\n      this.users.push({\n        nickname: \"admin\",\n        username: \"admin\",\n        password: \"123456\",\n        role: \"admin\"\n      });\n\n      localStorage.setItem('users', JSON.stringify(this.users));\n    }\n\n    if (scores) {\n      this.scores = JSON.parse(scores);\n    } else {\n      localStorage.setItem('scores', JSON.stringify(this.scores));\n    }\n  }\n\n  public saveUsersToLocalStorage(): void {\n    if (this.users) {\n      localStorage.setItem('users', JSON.stringify(this.users));\n    }\n  }\n\n  public saveScoresToLocalStorage(): void {\n    if (this.scores) {\n      localStorage.setItem('scores', JSON.stringify(this.scores));\n    }\n  }\n\n  public getUserDetails(user: User): GetUserResponse {\n    let result = this.users.find((f: User) => {\n      return (f.username == user.username) &&\n        (f.nickname == user.nickname) &&\n        (f.password == user.password);\n    });\n\n    if (result) {\n      return new GetUserResponse(200, result);\n    } else {\n      user.role = \"user\";\n      this.users.push(user);\n      this.saveUsersToLocalStorage();\n      return new GetUserResponse(201, user);\n    }\n  }\n\n  public getScoreLists(): Array<Score> {\n    return this.scores;\n  }\n\n  public setScore(score: Score): void {\n    this.scores.push(score);\n    this.saveScoresToLocalStorage();\n  }\n\n}\n\nclass GetUserResponse {\n  status: number;\n  user: User;\n\n  constructor(status: number, user: User) {\n    this.status = status;\n    this.user = user;\n  }\n}\n","export enum AlertType {\n    Success = \"alert-success\",\n    Info = \"alert-info\",\n    Warning = \"alert-warning\",\n    Danger = \"alert-danger\",\n    Primary = \"alert-primary\",\n    Secondary = \"alert-secondary\",\n    Light = \"alert-light\",\n    Dark = \"alert-dark\"\n}\n\nexport class Alert {\n    alertType: AlertType;\n    text: string;\n    dismissible?: boolean;\n    timeInSeconds?: number;\n\n    constructor(alertType: AlertType, text: string, dismissible: boolean = false, timeInSeconds: number = 3) {\n        this.alertType = alertType;\n        this.text = text;\n        this.dismissible = dismissible;\n        this.timeInSeconds = timeInSeconds;\n    }\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Alert, AlertType } from '../module/alert/model/alert';\nimport { AlertService } from '../module/alert/providers/alert.service';\nimport { SharedService } from '../shared.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(\n    private sharedService: SharedService,\n    private alertService: AlertService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let user = this.sharedService.getCurrentUser();\n    if (user && user.role == \"admin\") {\n      return true;\n    }\n    this.alertService.show(new Alert(AlertType.Warning, \"You need to login as admin\", true, 2));\n    this.router.navigate(['login']);\n    return false;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Alert } from '../../model/alert';\nimport { AlertService } from '../../providers/alert.service';\n\n@Component({\n  selector: 'alert-container',\n  templateUrl: './alert-container.component.html',\n  styleUrls: ['./alert-container.component.scss']\n})\nexport class AlertContainerComponent implements OnInit {\n\n  public alerts: Array<Alert> = [];\n\n  constructor(\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.alertService.alerts.subscribe((alerts: Array<Alert>) => {\n      this.alerts = alerts;\n    });\n  }\n\n}\n","<alert *ngFor=\"let alert of alerts\" [alert]=\"alert\"></alert>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Score } from 'src/app/model/score';\nimport { User } from 'src/app/model/user';\nimport { Alert, AlertType } from 'src/app/module/alert/model/alert';\nimport { AlertService } from 'src/app/module/alert/providers/alert.service';\nimport { SharedService } from 'src/app/shared.service';\n\nconst delay = (ms: any) => new Promise(res => setTimeout(res, ms));\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\n  public disabled: boolean = false;\n  public gameCount: number = 0;\n  public totalCount: number = 3;\n  public totalScore: number = 0;\n\n  public imageURL: string = \"assets/1.png\";\n\n  private startTime: number = 0;\n  private endTime: number = 0;\n\n  constructor(\n    private sharedService: SharedService,\n    private alertService: AlertService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.startTime = Date.now();\n  }\n\n  async play(): Promise<void> {\n\n    this.disabled = true;\n\n    for (let i = 0; i < 15; i++) {\n      await delay(250);\n      this.imageURL = \"assets/\" + ((i % 6) + 1) + \".png\";\n    }\n\n    let score = Math.floor(Math.random() * 6) + 1;\n\n    this.imageURL = \"assets/\" + score + \".png\";\n    this.totalScore += score;\n    this.gameCount++;\n\n    this.alertService.show(new Alert(AlertType.Info, \"You score \" + score));\n\n    if (this.gameCount == 3) {\n      this.endTime = Date.now();\n\n      let time = new Date(0, 0, 0, 0);\n      time.setMilliseconds(this.endTime - this.startTime);\n\n      const user: User = this.sharedService.getCurrentUser();\n      const score: Score = new Score(user.nickname, this.totalScore, time);\n\n      this.sharedService.setScore(score);\n\n      this.router.navigateByUrl(\"greet\", {\n        state: {\n          score: score\n        }\n      });\n    } else {\n      this.disabled = false;\n    }\n\n  }\n\n}\n","<div class=\"container py-5\">\n\n    <div class=\"row\">\n        <div class=\"col-lg-8 mx-auto text-center\">\n            <h1 class=\"display-4\">Welcome</h1>\n            <p class=\"lead mb-0\">Game: {{ gameCount }}/{{ totalCount }}, Score: {{ totalScore }} </p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-lg-6 mx-auto\">\n            <div class=\"bg-white rounded-lg shadow-sm p-5\">\n\n                <div id=\"nav-tab-card\" class=\"tab-pane fade show active\">\n\n                    <div class=\"image-container\">\n                        <img class=\"vertical-center\" [src]=\"imageURL\">\n                    </div>\n\n                    <button type=\"button\" class=\"subscribe btn btn-primary btn-block rounded-pill shadow-sm\"\n                        (click)=\"play()\" [disabled]=\"disabled\">\n                        Random </button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","export class Score {\n    nickname: string;\n    score: number;\n    time: Date;\n\n    constructor(nickname: string, score: number, time: Date) {\n        this.nickname = nickname;\n        this.score = score;\n        this.time = time;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from './database.service';\nimport { Score } from './model/score';\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  private currentUser !: User;\n\n  constructor(\n    private dbService: DatabaseService,\n    private router: Router\n  ) { }\n\n  private convertToCSV(objArray: Array<object>, headerList: Array<string>): string {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n    let row = 'Sr,';\n\n    for (let index in headerList) {\n      row += headerList[index] + ',';\n    }\n\n    row = row.slice(0, -1);\n    str += row + '\\r\\n';\n\n    for (let i = 0; i < array.length; i++) {\n      let line = (i + 1) + '';\n      for (let index in headerList) {\n        let head = headerList[index];\n        line += ',' + array[i][head];\n      }\n      str += line + '\\r\\n';\n    }\n\n    return str;\n  }\n\n  public downloadCSVFile(data: Array<object>, filename = 'data'): void {\n\n    let csvData = this.convertToCSV(data, ['nickname', 'score', 'timeTaken']);\n\n    console.log(csvData);\n\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n\n    if (isSafariBrowser) {\n      dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", filename + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n  }\n\n  public authenticateUser(user: User): AuthenticatorResponse {\n    let response = this.dbService.getUserDetails(user);\n    this.setCurrentUser(response.user);\n    if (response.status == 201) {\n      return new AuthenticatorResponse(201, response.user);\n    } else {\n      return new AuthenticatorResponse(200, response.user);\n    }\n  }\n\n  public setCurrentUser(user: any): void {\n    this.currentUser = user;\n  }\n\n  public getCurrentUser(): User {\n    return this.currentUser;\n  }\n\n  public getAllScore(): Array<Score> {\n    return this.dbService.getScoreLists();\n  }\n\n  public setScore(score: Score): void {\n    this.dbService.setScore(score);\n  }\n\n  public signOut(): void {\n    this.setCurrentUser(null);\n    this.router.navigateByUrl('login');\n  }\n}\n\nclass AuthenticatorResponse {\n  status: number;\n  user: User;\n\n  constructor(status: number, user: User) {\n    this.status = status;\n    this.user = user;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { GameComponent } from './components/game/game.component';\nimport { GreetingComponent } from './components/greeting/greeting.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AdminGuard } from './guard/admin.guard';\nimport { UserGuard } from './guard/user.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'login'\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'game',\n    component: GameComponent,\n    canActivate: [UserGuard]\n  },\n  {\n    path: 'greet',\n    component: GreetingComponent,\n    canActivate: [UserGuard]\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AdminGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Alert } from '../../model/alert';\nimport { AlertService } from '../../providers/alert.service';\n\n@Component({\n  selector: 'alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n\n  @Input() alert !: Alert;\n\n  public isHidden: boolean = false;\n\n  constructor(\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    let time: number = 0;\n    if (this.alert.timeInSeconds) {\n      time = this.alert.timeInSeconds * 1000;\n    }\n\n    setTimeout(() => {\n      this.isHidden = true;\n      setTimeout(() => { this.alertService.remove(this.alert); }, 500);\n    }, time);\n  }\n\n}\n","<div class=\"{{ alert.alertType }} alert fade show\"\n    [ngClass]=\"{'alert-dismissible': alert.dismissible, 'd-none': isHidden}\" role=\"alert\">\n    {{ alert.text }}\n    <button type=\"button\" [ngClass]=\"{'d-none': !alert.dismissible}\" class=\"close\" data-dismiss=\"alert\"\n        aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}